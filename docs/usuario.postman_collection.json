{
	"info": {
		"_postman_id": "50e627da-f701-4995-a1d3-eee5df0cda51",
		"name": "TECH_CHAL_GP83",
		"description": "Grupo 83 - Tech Challenge\n\nRepositório - [https://github.com/aschneider12/tech21](https://github.com/aschneider12/tech21)\n\nProjeto: ShareFood",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21463207"
	},
	"item": [
		{
			"name": "usuario",
			"item": [
				{
					"name": "inserir usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Verifica se o status da resposta é 201\r",
									"pm.test(\"Status code é 201 - Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta contém ID do novo recurso\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"});\r",
									"\r",
									"let response = pm.response.json();\r",
									"pm.environment.set(\"usuarioId\", response.id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Run Teste 2\",\r\n    \"email\": \"run@email.com\",\r\n    \"login\": \"run02\",\r\n    \"senha\": \"RunTeste@1\",\r\n    \"perfis\": [\"DONO\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/usuario",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario"
							]
						}
					},
					"response": []
				},
				{
					"name": "mudar senha",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Verifica se o status da resposta é 201\r",
									"pm.test(\"Status code é 204 - no content\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"senhaAntiga\": \"RunTeste@1\",\r\n    \"senhaNova\": \"@New12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/usuario/{{usuarioId}}/mudar-senha",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario",
								"{{usuarioId}}",
								"mudar-senha"
							]
						}
					},
					"response": []
				},
				{
					"name": "all usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/usuario",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario"
							]
						}
					},
					"response": []
				},
				{
					"name": "usuario by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta contém nome do restaurante\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"nome\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/usuario/{{usuarioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario",
								"{{usuarioId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Run Teste Atualizado\",\r\n    \"email\": \"runtest@email.com\",\r\n    \"login\": \"run01\",\r\n    \"perfis\": [\r\n        \"DONO\"\r\n    ],\r\n    \"endereco\": { \r\n        \"rua\": \"Morro do Cuiaba\",\r\n        \"numero\": \"244\",\r\n        \"cidade\": \"Rio de Janeiro\",\r\n        \"estado\": \"RJ\",\r\n        \"cep\": \"RJ\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/usuario/{{usuarioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario",
								"{{usuarioId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 204 - No Content\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/usuario/{{usuarioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario",
								"{{usuarioId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "perfis",
			"item": [
				{
					"name": "buscar perfis usuario",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/usuario/{{usuarioId}}/perfil",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario",
								"{{usuarioId}}",
								"perfil"
							]
						}
					},
					"response": []
				},
				{
					"name": "salvar perfis usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se o status da resposta é 201\r",
									"pm.test(\"Status code é 201 - Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"perfis\" : [\"CLIENTE\",\"ADMINISTRADOR\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/usuario/{{usuarioId}}/perfil",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario",
								"{{usuarioId}}",
								"perfil"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete perfil",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 204 - No Content\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"perfis\" : [\"CLIENTE\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/usuario/{{usuarioId}}/perfil",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"usuario",
								"{{usuarioId}}",
								"perfil"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "restaurante",
			"item": [
				{
					"name": "inserir restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// Verifica se o status da resposta é 201\r",
									"pm.test(\"Status code é 201 - Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta contém ID do novo recurso\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"});\r",
									"\r",
									"// Pega o corpo da resposta\r",
									"let response = pm.response.json();\r",
									"\r",
									"// Define a variável de ambiente \"restauranteId\" com o valor do campo \"id\"\r",
									"pm.environment.set(\"restauranteId\", response.id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Ikigai\",\r\n    \"tipoCozinha\": \"COZINHA CHINESA\",\r\n    \"horarioFuncionamento\": \"Atendimento 24h\",\r\n    \"dono\": {{usuarioId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/restaurante",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante"
							]
						}
					},
					"response": []
				},
				{
					"name": "restaurante by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta contém nome do restaurante\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"nome\");\r",
									"});\r",
									"\r",
									"pm.test(\"ID retornado é o mesmo buscado\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(parseInt(pm.environment.get(\"restauranteId\")));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let response = pm.response.json();\r",
									"\r",
									"// Define a variável de ambiente \"restauranteId\" com o valor do campo \"id\"\r",
									"pm.environment.set(\"restauranteId\", response.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Ikigai Atualizado\",\r\n    \"tipoCozinha\": \"COZINHA MINEIRA\",\r\n    \"horarioFuncionamento\": \"Atendimento depois das 11h\",\r\n    \"dono\": 3,\r\n    \"endereco\": { \r\n             \"rua\": \"Rua Faria Lima\",\r\n            \"numero\": \"114\",\r\n            \"cidade\": \"Gonçalo\",\r\n            \"estado\": \"MG\",\r\n            \"cep\": \"21.922-490.\"        \r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "all restaurantes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"\",\r\n    \"email\": \"denis123\",\r\n    \"login\": \"\",\r\n    \"senha\": \"denis\",\r\n    \"tipoUsuario\": null\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/restaurante",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete restaurante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 204 - No Content\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "item",
			"item": [
				{
					"name": "inserir item cardapio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201 - Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta contém ID do novo recurso\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"});\r",
									"\r",
									"\r",
									"let response = pm.response.json();\r",
									"pm.environment.set(\"itemCardapioId\", response.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{    \r\n        \"nome\": \"Panqueca de arroz\",\r\n        \"descricao\": \"Melhor panqueca da região\",\r\n        \"preco\": 45.34,\r\n        \"tipoVenda\": \"DELIVERY\",\r\n        \"pathFoto\": \"c://fotos/panquecas/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}/cardapio",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}",
								"cardapio"
							]
						}
					},
					"response": []
				},
				{
					"name": "get item cardapio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta contém nome do item cardapio\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"nome\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}/cardapio/{{itemCardapioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}",
								"cardapio",
								"{{itemCardapioId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "atualizar cardapio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200 - OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \r\n        \"nome\": \"Panqueca Atualizada\",\r\n        \"descricao\": \"Panqueca fitness\",\r\n        \"preco\": 150.00,\r\n        \"tipoVenda\": \"DELIVERY\",\r\n        \"pathFoto\": \"c://fotos/nutritivos/\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}/cardapio/{{itemCardapioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}",
								"cardapio",
								"{{itemCardapioId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get cardapio",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}/cardapio",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}",
								"cardapio"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 204 - No Content\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{tokenJwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/restaurante/{{restauranteId}}/cardapio/{{itemCardapioId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"restaurante",
								"{{restauranteId}}",
								"cardapio",
								"{{itemCardapioId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simulação erros",
			"item": [
				{
					"name": "erros usuario",
					"item": [
						{
							"name": "senha",
							"item": [
								{
									"name": "usuario  - senha sem numero",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 400 - Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem de erro contém texto sobre senha inválida\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.include(\"número\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"Teste 01\",\r\n    \"email\": \"denis123@email\",\r\n    \"login\": \"denis01\",\r\n    \"senha\": \"Denissemnumero\",\r\n    \"perfis\": [\"DONO\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/usuario",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"usuario"
											]
										}
									},
									"response": []
								},
								{
									"name": "usuario  - senha sem maiúscula",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 400 - Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem de erro contém texto sobre senha inválida\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.include(\"maiúscula\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"Teste 01\",\r\n    \"email\": \"denis123@email\",\r\n    \"login\": \"denis01\",\r\n    \"senha\": \"denissemnume9\",\r\n    \"perfis\": [\"DONO\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/usuario",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"usuario"
											]
										}
									},
									"response": []
								},
								{
									"name": "usuario  - senha 8 caracteres",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 400 - Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem de erro contém texto sobre senha inválida\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.include(\"8\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"Teste 01\",\r\n    \"email\": \"denis123@email\",\r\n    \"login\": \"denis01\",\r\n    \"senha\": \"Den@2\",\r\n    \"perfis\": [\"DONO\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/usuario",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"usuario"
											]
										}
									},
									"response": []
								},
								{
									"name": "usuario  - senha caracter especial",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code é 400 - Bad Request\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Mensagem de erro contém texto sobre senha inválida\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.include(\"especial\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tokenJwt}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nome\": \"Teste 01\",\r\n    \"email\": \"denis123@email\",\r\n    \"login\": \"denis01\",\r\n    \"senha\": \"Denis123\",\r\n    \"perfis\": [\"DONO\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/usuario",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"usuario"
											]
										}
									},
									"response": []
								}
							],
							"description": "validações da senha do usuário ao inserir"
						},
						{
							"name": "GET USUARIO 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 404 - Not found\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenJwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"nome\": \"Clark Quenti\",\r\n        \"email\": \"clark@quenti.com\",\r\n        \"login\": \"teste\",\r\n        \"senha\": \"admin\",\r\n        \"dataUltimaAlteracao\": \"2025-05-09\",\r\n        \"endereco\": null,\r\n        \"tipoUsuario\": \"DONO\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"nome\": \"Clark Cold\",\r\n        \"email\": \"clark@cold.com\",\r\n        \"login\": \"outroteste\",\r\n        \"senha\": \"admin\",\r\n        \"dataUltimaAlteracao\": \"2025-05-09\",\r\n        \"endereco\": null,\r\n        \"tipoUsuario\": \"CLIENTE\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/usuarios",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"usuarios"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT USUARIO 400 - erro validação",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"\",\r\n    \"email\": \"denis123\",\r\n    \"login\": \"\",\r\n    \"senha\": \"denis\",\r\n    \"perfis\": [null]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/usuario/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"usuario",
										"6"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT USUARIO 400 - erro usuário não encontrado",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nome\": \"batatinha\",\r\n    \"email\": \"batatinha@email\",\r\n    \"login\": \"batatinha\",\r\n    \"senha\": \"batatinha123\",\r\n    \"tipoUsuario\": \"DONO\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/usuario/99",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"usuario",
										"99"
									]
								}
							},
							"response": []
						},
						{
							"name": "MUDAR SENHA 400 - erro usuário não encontrado",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"senhaAntiga\": \"admin\",\r\n    \"senhaNova\": \"nova_senhaW\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/usuario/mudar-senha/99",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"usuario",
										"mudar-senha",
										"99"
									]
								}
							},
							"response": []
						},
						{
							"name": "MUDAR SENHA 400 - erro senha fraca",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tokenJwt}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"senhaAntiga\": \"admin\",\r\n    \"senhaNova\": \"hello\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/usuario/mudar-senha/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"usuario",
										"mudar-senha",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "AUTH LOGIN 401 - erro usuário inválido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const responseText = pm.response.text();\r",
											"\r",
											"const tokenPrefix = \"Token: \";\r",
											"const tokenIndex = responseText.indexOf(tokenPrefix);\r",
											"\r",
											"if (tokenIndex !== -1) {\r",
											"    const token = responseText.substring(tokenIndex + tokenPrefix.length).trim();\r",
											"    pm.collectionVariables.set(\"tokenJwt\", token);\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"login\": \"batatinha\",\r\n    \"senha\": \"batatinha\",\r\n    \"tipoUsuario\": \"DONO\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"description": "Essas requests serão executas após todas as inserções e exclusões e deverão retornar erros, somente referente ao USUÁRIO"
				}
			],
			"description": "Essas requests serão executas após todas as inserções e exclusões e deverão retornar erros"
		},
		{
			"name": "AUTH LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code é 200 - OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseText = pm.response.text();\r",
							"const tokenPrefix = \"Token: \";\r",
							"const tokenIndex = responseText.indexOf(tokenPrefix);\r",
							"\r",
							"if (tokenIndex !== -1) {\r",
							"    const token = responseText.substring(tokenIndex + tokenPrefix.length).trim();\r",
							"    pm.collectionVariables.set(\"tokenJwt\", token);\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"pedro\",\r\n    \"senha\": \"pedro123\" \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{tokenJwt}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tokenJwt",
			"value": ""
		},
		{
			"key": "itemCardapioId",
			"value": "",
			"type": "string"
		},
		{
			"key": "restauranteId",
			"value": "",
			"type": "string"
		},
		{
			"key": "usuarioId",
			"value": "",
			"type": "string"
		}
	]
}